#!/usr/bin/env python
import rospy
from lidarnav.msg import WallState

GAP_THRESHOLD = 20
inGap = False
prevCenter = None
location = 0

def callback(data):
    arr = data.wall
    start = len(arr)/2
    gapLength = 0    

    global inGap
    prevInGap = inGap
    inGap = arr[start]

    # go left
    leftIndex = start
    leftLen = 0
    while leftIndex > 0:
        if arr[leftIndex] == inGap:
            leftLen += 1
        else:
            break
        leftIndex -= 1

    # go right
    rightIndex = start
    rightLen = 0
    while rightIndex < len(arr):
        if arr[rightIndex] == inGap:
            rightLen += 1
        else:
            break
        rightIndex += 1

    canMoveForward = leftLen >= GAP_THRESHOLD/2 and rightLen >= GAP_THRESHOLD/2
    
    center = (leftIndex + rightIndex)/2
    if prevCenter == None:
        prevCenter = center
    
    global location, prevCenter
    if inGap == prevInGap:
        location += (center - prevCenter)
    
    prevCenter = center

    print canMoveForward, location, center


def main():
    rospy.init_node('lidar_localization')
    rospy.Subscriber("wall/state", WallState, callback)
    rospy.spin()
        
if __name__ == '__main__':
    main()
