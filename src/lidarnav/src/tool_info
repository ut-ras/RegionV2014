#!/usr/bin/env python2

import rospy
import roslib
from roslib import message

from sensor_msgs.msg import PointCloud2
from sensor_msgs.msg import Image

from cv_bridge import CvBridge
from lidarnav.msg import WallState
from ToolAnalyzer import ToolAnalyzer

SUB_TOPIC = "cloud"
PUB_TOPIC = "tools/state"
DEBUG_TOPIC = "tools/image"

anaylzer = None
image_pub = None
state_pub = None
index = None

def callback(data):
    global analyzer, state_pub, image_pub, index
    analyzer.getPosOfTool(index, data)
    
    if analyzer.debug:
        image_pub.publish(bridge.cv_to_imgmsg(analyzer.out_img, "bgr8"))

def main():
    global analyzer, bridge, image_pub, state_pub
    global SUB_TOPIC, PUB_TOPIC
    bridge = CvBridge()
    
    rospy.init_node('toolinfo')

    debug = rospy.get_param('~debug', False)
    analyzer = ToolAnalyzer(debug)

    rospy.Subscriber(SUB_TOPIC, PointCloud2, callback)
    if debug:
        image_pub = rospy.Publisher(DEBUG_TOPIC, Image)
    state_pub = rospy.Publisher(PUB_TOPIC, WallState)

    SUB_TOPIC = rospy.get_param('~subtopic', SUB_TOPIC)
    PUB_TOPIC = rospy.get_param('~pubtopic', PUB_TOPIC)
    
    global index
    index = rospy.get_param('~index', 0)
    print index
     
    rospy.loginfo("subscribing to "+SUB_TOPIC+" and publishing to "+PUB_TOPIC)

    rospy.spin()

if __name__ == "__main__":
    main()
