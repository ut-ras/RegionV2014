#!/usr/bin/env python2

import rospy
import roslib
from roslib import message

from sensor_msgs.msg import PointCloud2
from sensor_msgs.msg import Image

from cv_bridge import CvBridge
from driving.msg import Twist
from WallAnalyzer import WallAnalyzer

anaylzer = None
image_pub = None
state_pub = None

def callback(data):
    global analyzer, state_pub, image_pub
    analyzer.update(data)
    
    output = Twist()
    output.a = analyzer.wall_angle
    output.y = analyzer.wall_ydistance
    output.header.stamp = data.header.stamp
    state_pub.publish(output)    

    if analyzer.debug:
        image_pub.publish(bridge.cv_to_imgmsg(analyzer.out_img, "bgr8"))

def main():
    global analyzer, bridge, image_pub, state_pub
    bridge = CvBridge()

    rospy.init_node('wallinfo')

    debug = rospy.get_param('~debug', False)
    pweight = float(rospy.get_param('~pweight', 1))
    kweight = float(rospy.get_param('~kweight', 50))
    analyzer = WallAnalyzer(debug, pweight, kweight)

    rospy.Subscriber('cloud', PointCloud2, callback)
    if debug:
        image_pub = rospy.Publisher('wall/image', Image)
    state_pub = rospy.Publisher('lidar/pose', Twist)

    if debug:
        while not rospy.is_shutdown():
            rospy.loginfo('line: %s dist: %s ang: %s', 
                analyzer.prev, analyzer.prevd, analyzer.preva)
            rospy.sleep(1)

    rospy.spin()

if __name__ == "__main__":
    main()
